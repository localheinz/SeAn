Program ExeInfo;
Uses Dos,Crt,SeAnHelp;
Type ExeHeaderType = Record
                      Byte4Dh           : Byte; { 4D-hex                                       }
                      Byte5Ah           : Byte; { 55-hex                                       }
                      BytesLastPage     : Word; { Number of Bytes on last Page                 }
                      TotalPages        : Word; { Number of Pages in EXE-File (Page=512 Bytes  }
                      RelozEntries      : Word; { Number of Entires in Relozierungs-Tabelle    }
                      HeaderSize        : Word; { Size of Header as a factor of 16             }
                      MinSizeOfPages    : Word; { Number of Pages required free upon program   }
                      MaxSizeOfPages    : Word; { Number of Pages required free upon program   }
                      SSRegister        : Word;
                      SPRegister        : Word;
                      CodeWord          : Word; { Negative Sum of all Bytes in EXE-File        }
                      IPRegister        : Word;
                      CSRegister        : Word;
                      RelOffSet         : Word; { OffSet from Relozierungs-Tabell to EXE-Begin }
                      OverLay           : Word; { Generated by MS-Link                         }
                     End;
Var  ExeFile       : File Of ExeHeaderType;
     ExeData       : ExeHeaderType;
     ExeName       : String;
     S             : SearchRec;


Begin
 If ParamCount=1 Then
 Begin;
  ExeName:=Gross(ParamStr(1));
  WriteLn('E.Pas written by Andreas M”ller for SeAn (04ù14ù95).');
  WriteLn('Exe-Info on file: ',ExeName);
  If Not Exist(ExeName) Then
  Begin;
   WriteLn('File does not exist!');
  End Else
  Begin;
   FindFirst(ExeName,AnyFile,S);
   If S.Attr=$10 Then
   Begin;
    WriteLn('Filename specifies a directory!');
   End Else
   Begin;
    Assign(ExeFile,ExeName);
    ReSet(ExeFile);
    Read(ExeFile,ExeData);
    Close(ExeFile);
    If ((ExeData.Byte4Dh+ExeData.Byte5Ah)<>($5A+$4D)) Or (Size(ExeName)<SizeOf(ExeData)) Then
    Begin;
     WriteLn('File does not appear to be an exe-file!');
    End Else
    Begin;
     WriteLn('Actual file size              : ',BigSize(S.Size),' Bytes');
     WriteLn('Size loaded into memory       : ',BigSize(ExeData.BytesLastPage+(ExeData.TotalPages-1)*512),' Bytes');
     WriteLn('Entries in Reloz-table        : ',ExeData.RelozEntries);
     WriteLn('Size of Exe-header            : ',BigSize(ExeData.HeaderSize*16),' Bytes');
     WriteLn('Least number of pages required: ',ExeData.MinSizeOfPages);
     WriteLn('Most number of pages required : ',ExeData.MaxSizeOfPages);
     WriteLn('Codeword                      : ',ExeData.CodeWord);
     If ProgramCoded(ExeName) Then
     Begin;
      Write('Checksum had been added to file...');
      If ProgramChanged(ExeName)=False Then WriteLn('Tests Ok.') Else WriteLn('Possible Virus Infection!!!');
     End;
    End;
   End;
  End;
 End Else
 Begin;
  WriteLn;
  WriteLn('V.Pas written by Andreas M”ller for SeAn (12/02/94).');
  WriteLn;
  WriteLn('Tells you more about your exe-files. Specify name of file.');
  WriteLn('Options: E.EXE filename');
  WriteLn('               filename Name of exe-file to be checked out.');
  WriteLn;
 End;
End.
